# SPDX-License: LGPL-3.0-or-later
# (c) 2025 Frank David Martínez Muñoz. <mnesarco at gmail.com>

from __future__ import annotations
from pathlib import Path

from freecad.vars.core.variables import get_vars
import html
import datetime

from typing import TYPE_CHECKING

if TYPE_CHECKING:
    from FreeCAD import Document # type: ignore

CSS = """
table {
    width: 100%;
    border-collapse: collapse;
}
th, td {
    border: 1px solid #000;
    padding: 8px;
    text-align: left;
}
th {
    background-color: #f2f2f2;
}
tr:nth-child(even) {
    background-color: #f9f9f9;
}
tr:hover {
    background-color: #f1f1f1;
}
"""

HTML = """
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>FreeCAD Vars</title>
    <style>
    {style}
    </style>
</head>
<body>
    <h1>FreeCAD Vars: Variables</h1>
    <h2>Document: {doc_name}</h3>
    <h3>Path: {doc_path}</h4>
    <small>Date: {date}</small>
    <table>
        <tbody>
            {rows}
        </tbody>
    </table>
    <p style="text-align: center;">Generated by <a href="https://github.com/mnesarco/Vars/">Vars</a></p>
</body>
</html>
"""

ROW = """
<tr>
    <td>{group}</td>
    <td>{name}</td>
    <td>{type}</td>
    <td>{value}</td>
    <td>{expression}</td>
    <td>{description}</td>
    <td><ul>{options}</ul></td>
</tr>
"""

GROUP_ROW = """
<tr>
    <th colspan="7" style="text-align: center; font-size: 1.2em;">{group}</th>
</tr>
<tr>
    <th>Group</th>
    <th>Name</th>
    <th>Type</th>
    <th>Value</th>
    <th>Expression</th>
    <th>Description</th>
    <th>Options</th>
</tr>
"""

def report_vars(file_path: str | Path, doc: Document) -> None:
    """
    Report the variables to a file.
    """
    if not isinstance(file_path, Path):
        file_path = Path(file_path)

    variables = get_vars(doc)
    rows = []
    last_group = None
    for var in sorted(variables, key=lambda x: (x.group, x.name)):
        if var.group != last_group:
            last_group = var.group
            rows.append(GROUP_ROW.format(group=html.escape(var.group or "")))
        rows.append(ROW.format(
            group=html.escape(var.group or ""),
            name=var.name,
            type=var.var_type,
            description=html.escape(str(var.description or "")),
            options="\n".join(f"<li>{html.escape(str(option or ''))}</li>" for option in var.options),
            value=html.escape(str(var.value or "")),
            expression=html.escape(str(var.expression or "")),
        ))

    with file_path.open("w") as f:
        f.write(HTML.format(
            doc_name=doc.Name,
            doc_path=doc.FileName or "",
            rows="\n".join(rows),
            style=CSS,
            date=datetime.datetime.now().astimezone(),
        ))

    import webbrowser
    webbrowser.open(file_path.as_uri(), new=2, autoraise=True)
